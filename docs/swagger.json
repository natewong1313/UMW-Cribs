{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample api",
        "title": "Web App Template API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/api/listings": {
            "get": {
                "description": "get all listings in database",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all listings",
                "operationId": "get-listings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListingsResponse"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "description": "get user",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user",
                "operationId": "get-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    }
                }
            }
        },
        "/api/user/verify": {
            "get": {
                "description": "verify auth token from firebase",
                "produces": [
                    "application/json"
                ],
                "summary": "verify auth token from firebase",
                "operationId": "verify-token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VerifyTokenResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ListingsResponse": {
            "type": "object",
            "properties": {
                "listings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Listing"
                    }
                }
            }
        },
        "UserResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/auth.UserRecord"
                }
            }
        },
        "VerifyTokenResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "auth.UserInfo": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "photoUrl": {
                    "type": "string"
                },
                "providerId": {
                    "description": "In the ProviderUserInfo[] ProviderID can be a short domain name (e.g. google.com),\nor the identity of an OpenID identity provider.\nIn UserRecord.UserInfo it will return the constant string \"firebase\".",
                    "type": "string"
                },
                "rawId": {
                    "type": "string"
                }
            }
        },
        "auth.UserMetadata": {
            "type": "object",
            "properties": {
                "creationTimestamp": {
                    "type": "integer"
                },
                "lastLogInTimestamp": {
                    "type": "integer"
                },
                "lastRefreshTimestamp": {
                    "description": "The time at which the user was last active (ID token refreshed), or 0 if\nthe user was never active.",
                    "type": "integer"
                }
            }
        },
        "auth.UserRecord": {
            "type": "object",
            "properties": {
                "customClaims": {
                    "type": "object",
                    "additionalProperties": true
                },
                "disabled": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emailVerified": {
                    "type": "boolean"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "photoUrl": {
                    "type": "string"
                },
                "providerId": {
                    "description": "In the ProviderUserInfo[] ProviderID can be a short domain name (e.g. google.com),\nor the identity of an OpenID identity provider.\nIn UserRecord.UserInfo it will return the constant string \"firebase\".",
                    "type": "string"
                },
                "providerUserInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.UserInfo"
                    }
                },
                "rawId": {
                    "type": "string"
                },
                "tenantID": {
                    "type": "string"
                },
                "tokensValidAfterMillis": {
                    "description": "milliseconds since epoch.",
                    "type": "integer"
                },
                "userMetadata": {
                    "$ref": "#/definitions/auth.UserMetadata"
                }
            }
        },
        "database.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "database.Image": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "database.Listing": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/database.Address"
                },
                "availabilityDate": {
                    "type": "string"
                },
                "available": {
                    "type": "boolean"
                },
                "bathrooms": {
                    "type": "number"
                },
                "bedrooms": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Image"
                    }
                },
                "rent": {
                    "type": "integer"
                },
                "source": {
                    "$ref": "#/definitions/database.Source"
                },
                "squareFootage": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "database.Source": {
            "type": "object",
            "properties": {
                "site": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}